Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution.


version 1

functions of hashmap
get
public V get(Object key)
Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.

put
public V put(K key,
             V value)
Associates the specified value with the specified key in this map. If the map previously contained a mapping for the key, the old value is replaced.

/*
 * in reference to
 * 本代码由九章算法编辑提供。版权所有，转发请注明出处。
 * - 九章算法致力于帮助更多中国人找到好的工作，教师团队均来自硅谷和国内的一线大公司在职工程师。
 * - 现有的面试培训课程包括：九章算法班，系统设计班，算法强化班，Java入门与基础算法班，Android 项目实战班，Big Data 项目实战班，
 * - 更多详情请见官方网站：http://www.jiuzhang.com/?source=code
 * - 思路： target = number[i]+number[j] 把 <target-number[i], i> 放入hashmap，遍历number[], 如果在map.get != null 则配对了
 *
 */
public class Solution 
{
    public int[] twoSum(int[] nums, int target) 
    {
        // declare a hashmap
        Hashmap<Integer, Integer> sumMap<>;
        
        // find the two fit number in nums
        for (int i=0; i<nums.length;i++)
        {
            // determine whether couple of nums[i] is in the hashmap
            if (sumMap.get(nums[i])!=NULL)
            {
                int[] result = [sumMap.get(nums[i]),i];
                return result;
            }
            // put the couple of nums[i] and i into hashmap
            sumMap.put<target-nums[i],i>;
        }
        
        // find none
        return null;
        
    }
}


problems: declare the hashmap should be: HashMap<Integer,Integer> map = new HashMap<>();
declaration: HashMap<Integer,Integer> map; creation: map = new HashMap<>();
why new in such form: new HashMap<>() ????

version 2 

public class Solution 
{
    public int[] twoSum(int[] nums, int target) 
    {
        // declare a hashmap
        Hashmap<Integer, Integer> sumMap = new Hashmap<Integer, Integer>;
        
        // find the two fit number in nums
        for (int i=0; i<nums.length;i++)
        {
            // determine whether couple of nums[i] is in the hashmap
            if (sumMap.get(nums[i])!=NULL)
            {
                int[] result = [sumMap.get(nums[i]),i];
                return result;
            }
            // put the couple of nums[i] and i into hashmap
            sumMap.put<target-nums[i],i>;
        }
        
        // find none
        return null;
        
    }
}

problem1: Line 15: error: '(' or '[' expected
Line 65 should be new Hashmap<>(); but Why?????

then
problem2: Line 15: error: cannot find symbol: class Hashmap
Hashmap<>() should be HashMap

problem3: NULL can't be found. Should be null !

version 3 

public class Solution 
{
    public int[] twoSum(int[] nums, int target) 
    {
        // declare a hashmap
        HashMap<Integer, Integer> sumMap = new HashMap<>();
        
        // find the two fit number in nums
        for (int i=0; i<nums.length;i++)
        {
            // determine whether couple of nums[i] is in the hashmap
            if (sumMap.get(nums[i])!= null)
            {
                int[] result = {sumMap.get(nums[i]),i};
                return result;
            }
            // put the couple of nums[i] and i into hashmap
            sumMap.put(target-nums[i],i);
        }
        
        // find none
        int [] result = {};
        return result;
        
    }
}


OK!








